@model MovieApplication.ViewModel.responseModel
@{
    ViewData["Title"] = "Details";
    int totalMinutes = Model.Duration;
    int hours = totalMinutes / 60;
    int minutes = totalMinutes % 60;
}

<h1 class="text-center">Movie Details</h1>

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="row g-0">
            <div class="col-md-3">
                <div class="d-flex align-items-center justify-content-center h-90">
                    @if (!string.IsNullOrEmpty(Model.Image))
                    {
                        <img src="@Model.Image" alt="Movie Image" class="img-fluid h-80" />
                    }
                    else
                    {
                        <p class="text-center">No image available</p>
                    }
                </div>
            </div>
            <div class="col-md-9">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <h4 class="card-title">Movie Information</h4>
                        <div>
                            <a asp-action="Update" asp-route-id="@Model?.Id" class="btn btn-warning me-2">
                                <i class="fa fa-edit"></i>
                            </a>
                            <a asp-action="List" class="btn btn-secondary">
                                <i class="fa fa-arrow-left"></i>
                            </a>
                        </div>
                    </div>
                    <hr />
                    <dl class="row">
                        <dt class="col-sm-3">Movie Name</dt>
                        <dd class="col-sm-9">@Html.DisplayFor(model => model.MovieName)</dd>

                        <dt class="col-sm-3">Description</dt>
                        <dd class="col-sm-9">@Html.DisplayFor(model => model.Description)</dd>

                        <dt class="col-sm-3">Director</dt>
                        <dd class="col-sm-9">@Html.DisplayFor(model => model.Director)</dd>

                        <dt class="col-sm-3">Duration</dt>
                        <dd class="col-sm-9">@hours hr @minutes min</dd>

                        <dt class="col-sm-3">Genre</dt>
                        <dd class="col-sm-9">@Html.DisplayFor(model => model.Genre)</dd>
                    </dl>

                    <div class="text-center mt-4">
                        @if (!string.IsNullOrEmpty(Model.Movie))
                        {
                            <button id="watchButton" class="btn btn-primary">
                                <i class="fa fa-play"></i> Watch Movie
                            </button>
                        }
                        else
                        {
                            <p class="text-muted">No movie available to watch.</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="text-center mt-4">
    @if (User.Identity.IsAuthenticated)
    {
        <a asp-action="Reviews" asp-route-id="@Model?.Id" class="btn btn-success">
            <i class="fa fa-comment"></i> Leave Review
        </a>
    }
    else
    {
        <p>Please <a href="/Account/Login">login</a> to leave a review.</p>
    }
</div>

<div class="modal fade" id="watchModal" tabindex="-1" aria-labelledby="watchModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="watchModalLabel">Watch Movie</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="ratio ratio-16x9">
                    <iframe id="movieFrame" src="" frameborder="0" allowfullscreen></iframe>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var watchButton = document.getElementById('watchButton');
            var watchModal = new bootstrap.Modal(document.getElementById('watchModal'));
            var movieFrame = document.getElementById('movieFrame');
            var modalTitle = document.getElementById('watchModalLabel');

            if (watchButton) {
                watchButton.addEventListener('click', function () {
                    var movieUrl = '@Model.Movie';
                    movieFrame.src = movieUrl;
                    modalTitle.innerText = '@Model.MovieName';
                    watchModal.show();
                });
            }

            document.getElementById('watchModal').addEventListener('hidden.bs.modal', function () {
                movieFrame.src = '';
            });
        });
    </script>
}
