@model IEnumerable<responseModel>

@{
    ViewData["Title"] = "List";
    var pagination = ViewBag.Pagination as MovieApplication.ViewModel.Pagination; // viewBag.pagination must match the model class Pagination data types.
}
<style>
    .rounded-1 {
        border-width: 1.5px;
        border-style: solid;
        border-color: black;
    }

    .scrollable-description {
        max-height: 180px; 
        overflow-y: auto; 
    }
</style>

<h1 class="text-center">List of Movies</h1>

<div class="mb-4">
    <a asp-action="Create" class="btn btn-success">Add New</a>
</div>
<div>
    @using (Html.BeginForm("List", "Movie", FormMethod.Post))
    {
        <div class="container mt-3">
            <div class="row justify-content-end">
                <div class="col-md-4 col-sm-6">
                    <div class="input-group">
                        <input type="text" name="SearchString" value="@ViewBag.SearchString" class="form-control rounded-1 me-2" placeholder="Search here...">
                        <button class="btn btn-primary rounded-2" type="submit"><i class="fas fa-search"></i> Search</button>
                    </div>
                </div>
            </div>
        </div>
    }<br />
</div>
<div class="table-responsive rounded-2">
    <table class="table table-striped table-bordered rounded">
        <thead class="thead-dark">

            <tr style="object-fit: cover;">
                <th>
                    @Html.DisplayNameFor(x => x.MovieName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description) @*model is a parameter representing an instance of the model class.and points to the Name property of the Moviemodel class.*@
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Image)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Director)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Duration)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Genre)
                </th>

                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="shadow-sm bg-white" style="object-fit: cover;">
                    <td>
                        @item.MovieName
                    </td>
                    <td>
                        <div class="scrollable-description">
                            @item.Description
                        </div>
                    </td>


                    <td>
                        @if (string.IsNullOrEmpty(item.Image))
                        {
                            <img src="~/images/blank-movie.jpg" style="height: 200px; width: 220px; object-fit: cover;" />

                        }
                        else
                        {
                            <img src="@item.Image" style="height: 200px; width: 220px; object-fit: cover;" />

                        }
                    </td>

                    <td width="140">
                        @item.Director
                    </td>
                    <td width="105">
                        @{
                            int totalMinutes = item.Duration;
                            int hours = totalMinutes / 60;
                            int minutes = totalMinutes % 60;
                        }
                        @hours hr @minutes min
                    </td>

                    <td>
                        @item.Genre
                    </td>
                    <td>
                        <div class="btn-group" role="group">
                            <a asp-action="Update" asp-route-id="@item.Id" class="btn btn-warning me-2 rounded">Update</a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary me-2 rounded">Details</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger rounded">Delete</a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (pagination != null)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @if (pagination.PreviousPage)
            {
                <li class="page-item">
                    @*page-item and page-link is a bootstrap class pagination property*@
                    @*asp-route-currentPg is a tag helper attribute used in views,generate URLs with route parameters when clicking a link decreases the current page number by 1*@
                    <a class="page-link" asp-action="List" asp-route-currentPg="@(pagination.CurrentPage - 1)"> <span>&lt;&lt;Prev</span></a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">&lt;&lt;Prev</span>
                </li>
            }
            <li class="page-item active">
                <span class="page-link">
                    Page @pagination.CurrentPage of @pagination.TotalPages
                </span>
            </li>
            @if (pagination.NextPage)
            {
                <li class="page-item">

                    <a class="page-link" asp-action="List" asp-route-currentPg="@(pagination.CurrentPage + 1)">Next >></a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Next >></span>
                </li>
            }
        </ul>
    </nav>
}
